/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_belgian.h"

#define DEF 0
#define SYM 1
#define NUM 2
#define NAV 3

&mt {
  //  flavor = "tap-preferred";
   // tapping-term-ms = <200>;
};

/ {

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp BE_A &kp BE_Z &kp BE_E &kp BE_R &kp BE_T                       &kp BE_Y &kp BE_U    &kp BE_I    &kp BE_O    &kp BE_P
        &kp BE_Q &kp BE_S &kp BE_D &kp BE_F &kp BE_G                       &kp BE_H &kp BE_J    &kp BE_K    &kp BE_L    &kp BE_M
        &kp BE_W &kp BE_X &kp BE_C &kp BE_V &kp BE_B                       &kp BE_N &kp BE_COMM &kp BE_SCLN &mt LGUI BE_COLN &mt LALT BE_EQL
                           &mt LSHFT SPC &lt SYM ESC                       &lt NUM RET &ltbs NUM 0
      >;
    };

    symbol_layer {
      bindings = <
        &kp BE_LABK &kp BE_LBRC &kp BE_LCBR &kp BE_LPRN &none                       &none &kp BE_RPRN &kp BE_RCBR &kp BE_RBRC &kp BE_RABK
        &none       &none       &kp BE_UNDS &kp BE_DOT  &none                       &none &kp BE_COMM &kp BE_MINS &none       &none
        &none       &none       &none       &none       &none                       &none &none       &none       &none       &none
                                                &none &mo SYM                       &mo NUM &kp TAB
      >;      
    };

    number_layer {
      bindings = <
        &none    &kp BE_PERC &kp BE_MINS &kp BE_PLUS &none                          &kp BE_COLN &kp BE_ASTR &kp BE_SLSH &kp BE_CIRC &none
        &kp BE_1 &kp BE_2    &kp BE_3    &kp BE_4    &kp BE_5                       &kp BE_6    &kp BE_7    &kp BE_8    &kp BE_9    &kp BE_0
        &none    &none       &none       &kp LSHFT   &none                          &none       &kp LSHFT   &none       &none       &none
                                                &none &mo SYM                       &mo NUM &none
      >; 
    };

    navigation_layer {
      bindings = <
        &none &none      &none    &kp C_VOL_UP &none                       &none    &kp PGUP &none  &none     &none
        &none &kp C_PREV &kp C_PP &kp C_NEXT   &none                       &kp LEFT &kp DOWN &kp UP &kp RIGHT &none
        &none &none      &none    &kp C_VOL_UP &none                       &none    &kp PGDN &none  &none     &none
                                       &none &mo SYM                       &mo NUM &none
      >; 
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    navigation_layer {
      if-layers = <SYM NUM>;
      then-layer = <NAV>;
    };
  };

  macros {
    ud_tild: undead_tilda {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <40>;
      tap-ms = <40>;
      bindings = <&kp BE_TILD>, <&kp SPACE>;
    };
  };

  behaviors {
    bsdl: backspace_delete {        
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp BSPC>, <&kp DEL>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  ltbs: layer_tap_bspc_del {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    bindings = <&mo>, <&bsdl>;
    tapping-term-ms = <200>;
  };
};

/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_belgian.h"

#define DEF 0  // default
#define SYM 1  // symbol
#define NUM 2  // number
#define NAV 3  // navigation
#define DPM 4  // displaymanager
#define CON 5  // device control
#define EXT 6  // extra symbol
#define GAM 7  // game (azerty)
#define GAA 8  // game alt
#define QWE 9  // game1 (querty)
#define QWA 10 // game1 alt

&mt {
  tapping-term-ms = <220>;
};

&lt {
  tapping-term-ms = <170>;
};

/ {

  chosen {
    zmk,battery = &vbatt;
  };

  vbatt: vbatt {
    compatible = "zmk,battery-nrf-vddh";
  };

  keymap {
    compatible = "zmk,keymap";


    default_layer {
      bindings = <
        &kp BE_Q &kp BE_W &kp BE_F &kp BE_P &kp BE_B                       &kp BE_J &kp BE_L &kp BE_U &kp BE_Y &none
        &mt LGUI BE_A &mt LALT BE_R &mt LSHFT BE_S &mt LCTRL BE_T &kp BE_G                       &kp BE_M &mt LCTRL BE_N &mt LSHFT BE_E &mt LALT BE_I &mt LGUI BE_O
        &kp BE_Z &kp BE_X &kp BE_C &kp BE_D &kp BE_V                       &kp BE_K &kp BE_H &none &none &kp RALT
                           &lt SYM ESC &mt LSHFT SPC                       &mt LCTRL RET &mobs NUM 0
      >;
    };

    symbol_layer {
      bindings = <
        &kp BE_LABK &kp BE_LBRC &kp BE_LCBR &kp BE_LPRN &kp BE_HASH                       &kp BE_PIPE &kp BE_RPRN &kp BE_RCBR &kp BE_RBRC &kp BE_RABK
        &kp BE_SLSH &kp BE_SCLN &kp BE_UNDS &kp BE_DOT  &kp BE_DQUO                       &kp BE_QUOT &kp BE_COMM &kp BE_MINS &kp BE_COLN &kp BE_BSLS
        &none       &kp BE_DLR  &kp BE_AT   &kp BE_AMPR &to EXT                        &udtd &kp BE_EXLM &kp BE_EQL &kp BE_QUES             &none
                                                      &mo SYM &none                       &mo EXT &mo NUM
      >;      
    };

    number_layer {
      bindings = <
        &none    &kp BE_PERC &kp BE_MINS &kp BE_PLUS &none                          &kp BE_COLN &kp BE_ASTR &kp BE_SLSH &kp BE_CIRC &none
        &kp BE_1 &kp BE_2    &kp BE_3    &kp BE_4    &kp BE_5                       &kp BE_6    &kp BE_7    &kp BE_8    &kp BE_9    &kp BE_0
        &none    &none       &none       &kp LSHFT   &none                          &none       &kp LSHFT   &none       &none       &none
                                              &mo SYM &kp TAB                       &none &mo NUM
      >; 
    };

    navigation_layer {
      bindings = <
        &none   &none      &kp LALT     &kp C_VOL_UP &to QWE                         &none   &kp PGUP &none  &none     &to CON
        &to DPM &kp C_PREV &kp C_PP  &kp C_NEXT   &to GAM                       &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp LCTRL 
        &none   &none      &none  &kp C_VOL_DN &none                         &none   &kp PGDN &none  &none     &none
                                            &mo SYM &none                       &none &mo NUM
      >; 
    };

    hyprland_layer {
      bindings = <
        &hww N1 &hww N2 &hww N3 &hww N4 &none                       &none &hww N5 &hww N6 &hww N7 &hww N8 
        &hws N1 &hws N2 &hws N3 &hws N4 &none                       &none &hws N5 &hws N6 &hws N7 &hws N8
        &none   &none   &none   &none   &none                       &none &none   &none   &none   &none
                              &to DEF &to DEF                       &to DEF &to DEF
      >;
    };

    control_layer {
      bindings = <
        &bootloader   &bt BT_CLR    &bt BT_PRV    &bt BT_NXT    &sys_reset                          &sys_reset &out OUT_BLE &none &none &bootloader 
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &none      &out OUT_TOG &none &none &none
        &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4                       &none      &out OUT_USB &none &none &none
                                                              &to DEF &to DEF                       &to DEF &to DEF
      >;
    };

    extra_symbol_layer {
      bindings = <
        &none &none &none &delta &none                       &none &none &none &none &none
        &none &etre &kp BE_CCED &kp BE_EACU &none                       &none &kp BE_EGRV &kp BE_AGRV &ehat &none
        &none &none &none &none &none                       &udgr &none &none &none &none
                      &to DEF &to DEF                       &mo EXT &to DEF
      >;
    };

    gaming_layer {
      bindings = <
        &kp TAB   &kp BE_A &kp BE_Z &kp BE_E &kp BE_R                       &kp BE_T &kp BE_Y &kp BE_U &kp BE_I &kp BE_O 
        &kp LSHFT &kp BE_Q &kp BE_S &kp BE_D &kp BE_F                       &kp BE_G &kp BE_H &kp BE_J &kp BE_K &kp BE_L 
        &kp LCTRL &kp BE_W &kp BE_X &kp BE_C &kp BE_V                       &kp BE_B &kp BE_N &kp BE_COMM &kp BE_SCLN &to DEF
                                   &lt GAA ESC &kp SPACE                        &kp LALT &mo SYM
      >;
    };

    gaming_alt_layer {
      bindings = <
        &kp CAPS &kp BE_LPRN &kp BE_SECT  &kp BE_EGRV &kp BE_EXLM           &kp F5 &kp F6 &kp F7 &kp F8 &none
        &kp LSHFT &kp BE_AMPR &kp BE_EACU &kp BE_DQUO &kp BE_QUOT           &kp F1 &kp F2 &kp F3 &kp F4 &none
        &kp LCTRL &kp BE_CCED &kp BE_AGRV &none &none                       &kp F9 &kp F10 &kp F11 &kp F12 &none
                          &mo GAA &none                       &none &none
      >;
    };

    qwerty_layer {
      bindings = <
        &kp TAB   &kp BE_Q &kp BE_W &kp BE_E &kp BE_R                       &kp BE_T &kp BE_Y &kp BE_U &kp BE_I &kp BE_O 
        &kp LSHFT &kp BE_A &kp BE_S &kp BE_D &kp BE_F                       &kp BE_G &kp BE_H &kp BE_J &kp BE_K &kp BE_SCLN 
        &kp LCTRL &kp BE_Z &kp BE_X &kp BE_C &kp BE_V                       &kp BE_B &kp BE_N &kp BE_M &kp BE_COMM &to DEF
                                   &lt QWA ESC &kp SPACE                        &kp LALT &mo SYM
      >;
    };

    querty_alt_layer {
      bindings = <
        &kp CAPS &kp BE_5 &kp BE_6  &kp BE_7 &kp BE_8         &kp F5 &kp F6 &kp F7 &kp F8 &none
        &kp LSHFT &kp BE_1 &kp BE_2 &kp BE_3 &kp BE_4         &kp F1 &kp F2 &kp F3 &kp F4 &none
        &kp LCTRL &kp BE_9 &kp BE_0 &none &none               &kp F9 &kp F10 &kp F11 &kp F12 &none
                          &mo QWA &none                       &none &none
      >;
    };

    blank_layer {
      bindings = <
        &none &none &none &none &none                       &none &none &none &none &none
        &none &none &none &none &none                       &none &none &none &none &none
        &none &none &none &none &none                       &none &none &none &none &none
                          &none &none                       &none &none
      >;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    navigation_layer {
      if-layers = <SYM NUM>;
      then-layer = <NAV>;
    };
  };

  macros {
    udtd: undead_tilda {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <40>;
      tap-ms = <40>;
      bindings = <&kp BE_TILD>, <&kp SPACE>;
    };
    
    udgr: undead_grave {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <40>;
      tap-ms = <40>;
      bindings = <&kp BE_GRV>, <&kp SPACE>;
    };

    etre: e-trema {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <40>;
      tap-ms = <40>;
      bindings = <&kp BE_DIAE>, <&kp BE_E>;
    };

    ehat: e-hat {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <40>;
      tap-ms = <40>;
      bindings = <&kp BE_DCIR>, <&kp BE_E>;
    };

    delta: delta {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      wait-ms = <40>;
      tap-ms = <40>;
      bindings =
        <&macro_press &kp LCTRL>,
        <&macro_press &kp LSHFT>,
        <&macro_tap &kp BE_U>,
        <&macro_release &kp LSHFT>,
        <&macro_release &kp LCTRL>,

        <&macro_tap &kp BE_AGRV>,
        <&macro_tap &kp BE_DQUO>,
        <&macro_tap &kp BE_CCED>,
        <&macro_tap &kp BE_QUOT>,
        <&macro_tap &kp RET>;
    };

    hws: hyprland_workspace_switch {
      compatible = "zmk,behavior-macro-one-param";
      wait-ms = <40>;
      tap-ms = <40>;
      #binding-cells = <1>;
      bindings = 
        <&macro_press &kp LGUI>,
        <&macro_param_1to1>,
        <&macro_tap &kp 0>,
        <&macro_release &kp LGUI>;
    };

    hww: hyprland_window_to_workspace {
      compatible = "zmk,behavior-macro-one-param";
      wait-ms = <40>;
      tap-ms = <40>;
      #binding-cells = <1>;
      bindings = 
        <&macro_press &kp LGUI>,
        <&macro_press &kp LSHFT>,
        <&macro_param_1to1>,
        <&macro_tap &kp 0>,
        <&macro_release &kp LSHFT>,
        <&macro_release &kp LGUI>;
    };
  };

  behaviors {
    bsdl: backspace_delete {        
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp BSPC>, <&kp DEL>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  mobs: momentary_layer_bspc_del {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    bindings = <&mo>, <&bsdl>;
    tapping-term-ms = <170>;
  };
};
